169. Given an array nums of size n, return the majority element.The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

Example 1:
Input: nums = [3,2,3]
Output: 3

Example 2:
Input: nums = [2,2,1,1,1,2,2]
Output: 2

Solution in Following language:-

Solution in C++

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int i,j,sum,c=0;
        if(nums.size()==1)
        {
            return nums[0];
        }
        for(i=0;i<nums.size();i++)
        {   c=0;
            sum=nums[i];
            for(j=0;j<nums.size();j++)
            {
                if(nums[j]==sum)
                {
                    c++;
                }
            }
            if(c > nums.size()/2)
            {
                return sum;
            }
        }
        return 0;
    }
};


# solution in Python3

python3 []
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        candidate, count = None, 0
        for num in nums:
            if count == 0:
                candidate = num
            count += (1 if num == candidate else -1)
        return candidate
        