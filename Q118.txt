118. Pascal's Triangle ,Given an integer numRows, return the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

Example 2:

Input: numRows = 1
Output: [[1]]

Constraints:

1 <= numRows <= 30

solution -->

solution in python3 

class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        a=[]
        for i in range(numRows):
            row = [1]*(i+1)
            for j in range(1,i):
                row[j] = a[i - 1][j - 1] + a[i - 1][j]
            a.append(row)
        return a 

Solution in c++

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> a(numRows);
        int i,j;
        for(i=0;i<numRows;i++)
        {   a[i].resize(i + 1);
            for(j=0;j<=i;j++)
            {
                if(j==0 || j== i)
                {
                    a[i][j]=1;
                }
                else
                {
                    a[i][j]=a[i-1][j-1]+a[i-1][j];
                }
            }
        }
        return a;
    }
};
